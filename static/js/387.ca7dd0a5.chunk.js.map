{"version":3,"file":"static/js/387.ca7dd0a5.chunk.js","mappings":"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","sources":["api/TMDBApi.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6f033a77847b5b83d2b4d12dccf6a045';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n`;\n\nexport const Data = styled.p`\n  font-style: italic;\n`;\n","import { getMovieReviews } from 'api/TMDBApi';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Data, Img, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieReviews(movieId)\n      .then(reviews => {\n        setReviews(reviews);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const defaultImg = `https://bitslog.files.wordpress.com/2013/01/unknown-person1.gif`;\n\n  const formatCreatedAt = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n\n      {reviews.length !== 0 ? (\n        <List>\n          {reviews.map(\n            ({\n              id,\n              author,\n              author_details: { avatar_path },\n              content,\n              created_at,\n            }) => (\n              <li key={id}>\n                <Img\n                  src={\n                    avatar_path\n                      ? `https://image.tmdb.org/t/p/w500/${avatar_path}`\n                      : defaultImg\n                  }\n                  alt={author}\n                  width=\"50px\"\n                />\n                <h3>{author}</h3>\n                <Data>{formatCreatedAt(created_at)}</Data>\n                <p>{content}</p>\n              </li>\n            )\n          )}\n        </List>\n      ) : (\n        <h3>No reviews</h3>\n      )}\n\n      {error && (\n        <p style={{ textAlign: 'center', margin: 'auto' }}>Sorry. {error} ðŸ˜­</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","Data","_templateObject3","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","reviews","setReviews","_useState5","_useState6","error","setError","useEffect","then","catch","message","finally","_jsxs","children","_jsx","Loader","length","map","dateString","id","author","avatar_path","author_details","content","created_at","src","alt","width","Date","toLocaleDateString","year","month","day","style","textAlign","margin"],"sourceRoot":""}