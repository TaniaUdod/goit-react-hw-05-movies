{"version":3,"file":"static/js/257.aa99a4b9.chunk.js","mappings":"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","sources":["api/TMDBApi.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6f033a77847b5b83d2b4d12dccf6a045';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px 0;\n  gap: 24px;\n`;\n\nexport const TitleText = styled.h2`\n  margin: 36px 0 24px;\n`;\n\nexport const Span = styled.span`\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 20px;\n  cursor: pointer;\n  border-radius: 8px;\n  border: none;\n  font-size: 18px;\n  font-weight: 500;\n  min-width: 120px;\n  background-color: #a946ad;\n  color: #ffffff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    background-color: #905891;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  color: #070707;\n  font-size: 18px;\n\n  &:hover,\n  &:focus {\n    color: #a946ad;\n    font-weight: bold;\n  }\n`;\n","import { getMovieDetails } from 'api/TMDBApi';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  Button,\n  Container,\n  LinkInfo,\n  List,\n  Span,\n  TitleText,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieDetails(movieId)\n      .then(movie => {\n        setMovie(movie);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const defaultImg = `https://orangeheatingsupplies.co.uk/wp-content/uploads/2023/02/image-coming-soon-placeholder.png`;\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n\n      {isLoading && <Loader />}\n\n      {movie && (\n        <>\n          <Container>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              width={400}\n              alt={movie.original_title}\n            />\n            <div>\n              <h1>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h1>\n              <p>\n                <Span>Rating: </Span>\n                {Math.round(movie.vote_average * 10) / 10}\n              </p>\n              <TitleText>Overview: </TitleText>\n              <p>{movie.overview}</p>\n              <p>\n                <Span>Genres: </Span>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </p>\n            </div>\n          </Container>\n\n          <hr />\n          <h2>Additional information</h2>\n          <List>\n            <li>\n              <LinkInfo to=\"cast\">Cast</LinkInfo>\n            </li>\n            <li>\n              <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n            </li>\n          </List>\n          <hr />\n          <Outlet />\n        </>\n      )}\n\n      {error && (\n        <p style={{ textAlign: 'center', margin: 'auto' }}>Sorry. {error} ðŸ˜­</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","TitleText","_templateObject2","Span","_templateObject3","Button","_templateObject4","List","_templateObject5","LinkInfo","Link","_templateObject6","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movie","setMovie","_useState5","_useState6","error","setError","location","useLocation","useEffect","then","catch","message","finally","_jsxs","children","_jsx","to","state","from","type","Loader","_Fragment","src","poster_path","width","alt","original_title","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Outlet","style","textAlign","margin"],"sourceRoot":""}